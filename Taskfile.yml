version: "3"

tasks:
  gen-grpc: 
    desc: Generate the grpc client and server interfaces
    cmds: 
      - protoc --go_out=. --go_opt=paths=source_relative \ --go-grpc_out=. --go-grpc_opt=paths=source_relative \ api/wallet.proto


tasks:
  build-linux:
    desc: Build the app for the Linux
    cmds:
      - rm -rf bin | GOFLAGS=-mod=mod GOOS=linux GOARCH=amd64 go build -o bin/wallet main.go && cp bin/wallet ../crypto_app/clientWalletAPI

  build-mac:
    desc: Build the app for the MacOS
    cmds:
      - GOFLAGS=-mod=mod GOOS=darwin GOARCH=amd64 go build -o bin/wallet main.go | cp bin/wallet ../crypto_app/clientWalletAPI

  # ---------------------------------- get wallet commands ------------------------------------------------

  gwt-crt:
    desc: Run the get wallet command to create wallet with all available coins to current user
    cmds:
      # third flag should be a userId <-
      - GOFLAGS=-mod=mod go run main.go gwlt create test-user-id

  gwt-btc-error:
    desc: Run the get wallet command to create a btc ome-time address with an Error
    cmds:
      # solana is unavailable coin name
      - GOFLAGS=-mod=mod go run main.go gwlt solana test-user-id

  gwt-btc:
    desc: Run the get wallet command to create a btc ome-time address
    cmds:
      - GOFLAGS=-mod=mod go run main.go gwlt btc test-user-id

  gwt-eth:
    desc: Run the get wallet command to create a ETH ome-time address
    cmds:
      - GOFLAGS=-mod=mod go run main.go gwlt eth test-user-id

  gwt-ton:
    desc: Run the get wallet command to create a ton ome-time address
    cmds:
      - GOFLAGS=-mod=mod go run main.go gwlt ton test-user-id

  # ---------------------------------- get balanmce commands ------------------------------------------------

  gb-btc:
    desc: Run the get balance command to get a btc balance data by address
    cmds:
      # second flag should be an btc address
      - GOFLAGS=-mod=mod go run main.go gb btc bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh usd

  gb-eth:
    desc: Run the get balance command to get a eth balance data by address
    cmds:
      # second flag should be a eth address
      - GOFLAGS=-mod=mod go run main.go gb eth 0x165CD37b4C644C2921454429E7F9358d18A45e14 usd

  gb-ton:
    desc: Run the get balance command to get a ton balance data by address
    cmds:
      # second flag should be a ton address
      - GOFLAGS=-mod=mod go run main.go gb ton UQBDlXKkjzpBLdB9ck7vdRCsedbCQW37iFd03xb60cj65rNR usd

  # ---------------------------------- transaction commands ------------------------------------------------

  tsx-btc:
    desc: Run the send transaction from address to address in btc blockchain
    cmds:
      # second flag should be a btc address from, third -> address to, fourth -> amount
      - GOFLAGS=-mod=mod go run main.go tsx btc mx7gPu4v1E77LH25BqYtUjTAZnykVxoKK2 bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh 0.2

  tsx-ton:
    desc: Run the send transaction from address to address in ton blockchain
    cmds:
      # second flag should be a ton address from, third -> address to, fourth -> amount
      - GOFLAGS=-mod=mod go run main.go tsx ton

  # ---------------------------------- transaction commands ------------------------------------------------

  prs-btc:
    desc: Run the balance parser in range FROM-stamp to TO-stamp
    cmds:
      # second flag should be an btc address
      - GOFLAGS=-mod=mod go run main.go prs btc 01230129301 079419028741

  # ---------------------------------- default commands ------------------------------------------------

  run:
    desc: Run the app
    cmds:
      - GOFLAGS=-mod=mod go run main.go
